# encoding: utf-8

# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   /spec/fixtures/responses/whois.inww.com/status_registered.expected
#
# and regenerate the tests with the following rake task
#
#   $ rake spec:generate
#

require 'spec_helper'
require 'whois/record/parser/whois.inww.com.rb'

describe Whois::Record::Parser::WhoisInwwCom, "status_registered.expected" do

  before(:each) do
    file = fixture("responses", "whois.inww.com/status_registered.txt")
    part = Whois::Record::Part.new(:body => File.read(file))
    @parser = klass.new(part)
  end

  describe "#status" do
    it do
      @parser.status.should == :registered
    end
  end
  describe "#available?" do
    it do
      @parser.available?.should == false
    end
  end
  describe "#registered?" do
    it do
      @parser.registered?.should == true
    end
  end
  describe "#created_on" do
    it do
      @parser.created_on.should be_a(Time)
      @parser.created_on.should == Time.parse("1998-04-16")
    end
  end
  describe "#updated_on" do
    it do
      @parser.updated_on.should be_a(Time)
      @parser.updated_on.should == Time.parse("2000-03-30")
    end
  end
  describe "#expires_on" do
    it do
      @parser.expires_on.should be_a(Time)
      @parser.expires_on.should == Time.parse("2012-11-18")
    end
  end
  describe "#registrar" do
    it do
      @parser.registrar.should be_a(Whois::Record::Registrar)
      @parser.registrar.id.should           == nil
      @parser.registrar.name.should         == "Melbourne IT"
      @parser.registrar.organization.should == "Melbourne IT Ltd"
      @parser.registrar.url.should          == "http://melbourneit.com.au"
    end
  end
  describe "#registrant_contacts" do
    it do
      @parser.registrant_contacts.should be_a(Array)
      @parser.registrant_contacts.should have(1).items
      @parser.registrant_contacts[0].should be_a(Whois::Record::Contact)
      @parser.registrant_contacts[0].type.should         == Whois::Record::Contact::TYPE_REGISTRANT
      @parser.registrant_contacts[0].id.should           == nil
      @parser.registrant_contacts[0].name.should         == "Melbourne IT Ltd"
      @parser.registrant_contacts[0].organization.should == nil
      @parser.registrant_contacts[0].address.should      == "Level 2, 120 King Street"
      @parser.registrant_contacts[0].city.should         == "Melbourne"
      @parser.registrant_contacts[0].zip.should          == "3000"
      @parser.registrant_contacts[0].state.should        == "Vic"
      @parser.registrant_contacts[0].country.should      == "AUSTRALIA"
      @parser.registrant_contacts[0].phone.should        == nil
      @parser.registrant_contacts[0].fax.should          == nil
      @parser.registrant_contacts[0].email.should        == nil
    end
  end
  describe "#admin_contacts" do
    it do
      @parser.admin_contacts.should be_a(Array)
      @parser.admin_contacts.should have(1).items
      @parser.admin_contacts[0].should be_a(Whois::Record::Contact)
      @parser.admin_contacts[0].type.should         == Whois::Record::Contact::TYPE_ADMIN
      @parser.admin_contacts[0].id.should           == nil
      @parser.admin_contacts[0].name.should         == "Account Manager"
      @parser.admin_contacts[0].organization.should == nil
      @parser.admin_contacts[0].address.should      == "Level 2, 120 King Street"
      @parser.admin_contacts[0].city.should         == "Melbourne"
      @parser.admin_contacts[0].zip.should          == "3000"
      @parser.admin_contacts[0].state.should        == "Vic"
      @parser.admin_contacts[0].country.should      == "AUSTRALIA"
      @parser.admin_contacts[0].phone.should        == "+61.386242465"
      @parser.admin_contacts[0].fax.should          == nil
      @parser.admin_contacts[0].email.should        == "cdm@melbourneit.com"
    end
  end
  describe "#technical_contacts" do
    it do
      @parser.technical_contacts.should be_a(Array)
      @parser.technical_contacts.should have(1).items
      @parser.technical_contacts[0].should be_a(Whois::Record::Contact)
      @parser.technical_contacts[0].type.should         == Whois::Record::Contact::TYPE_TECHNICAL
      @parser.technical_contacts[0].id.should           == nil
      @parser.technical_contacts[0].name.should         == "Account Manager"
      @parser.technical_contacts[0].organization.should == nil
      @parser.technical_contacts[0].address.should      == "Level 2, 120 King Street"
      @parser.technical_contacts[0].city.should         == "Melbourne"
      @parser.technical_contacts[0].zip.should          == "3000"
      @parser.technical_contacts[0].state.should        == "Vic"
      @parser.technical_contacts[0].country.should      == "AUSTRALIA"
      @parser.technical_contacts[0].phone.should        == "+61.386242465"
      @parser.technical_contacts[0].fax.should          == nil
      @parser.technical_contacts[0].email.should        == "cdm@melbourneit.com"
    end
  end
  describe "#nameservers" do
    it do
      @parser.nameservers.should be_a(Array)
      @parser.nameservers.should have(2).items
      @parser.nameservers[0].should be_a(Whois::Record::Nameserver)
      @parser.nameservers[0].name.should == "ns1.melbourneit.com"
      @parser.nameservers[0].ipv4.should == nil
      @parser.nameservers[1].should be_a(Whois::Record::Nameserver)
      @parser.nameservers[1].name.should == "ns2.melbourneit.com"
      @parser.nameservers[1].ipv4.should == nil
    end
  end
end
