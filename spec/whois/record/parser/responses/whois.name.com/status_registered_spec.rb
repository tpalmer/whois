# encoding: utf-8

# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   /spec/fixtures/responses/whois.name.com/status_registered.expected
#
# and regenerate the tests with the following rake task
#
#   $ rake spec:generate
#

require 'spec_helper'
require 'whois/record/parser/whois.name.com.rb'

describe Whois::Record::Parser::WhoisNameCom, "status_registered.expected" do

  before(:each) do
    file = fixture("responses", "whois.name.com/status_registered.txt")
    part = Whois::Record::Part.new(:body => File.read(file))
    @parser = klass.new(part)
  end

  describe "#status" do
    it do
      @parser.status.should == :registered
    end
  end
  describe "#available?" do
    it do
      @parser.available?.should == false
    end
  end
  describe "#registered?" do
    it do
      @parser.registered?.should == true
    end
  end
  describe "#created_on" do
    it do
      @parser.created_on.should be_a(Time)
      @parser.created_on.should == Time.parse("1995-01-03 05:00:00")
    end
  end
  describe "#updated_on" do
    it do
      @parser.updated_on.should == nil
    end
  end
  describe "#expires_on" do
    it do
      @parser.expires_on.should be_a(Time)
      @parser.expires_on.should == Time.parse("2019-11-04 00:00:00")
    end
  end
  describe "#registrar" do
    it do
      @parser.registrar.should be_a(Whois::Record::Registrar)
      @parser.registrar.id.should           == nil
      @parser.registrar.name.should         == "Name.com"
      @parser.registrar.organization.should == "Name.com LLC"
      @parser.registrar.url.should          == "http://www.name.com"
    end
  end
  describe "#registrant_contacts" do
    it do
      @parser.registrant_contacts.should be_a(Array)
      @parser.registrant_contacts.should have(1).items
      @parser.registrant_contacts[0].should be_a(Whois::Record::Contact)
      @parser.registrant_contacts[0].type.should         == Whois::Record::Contact::TYPE_REGISTRANT
      @parser.registrant_contacts[0].id.should           == nil
      @parser.registrant_contacts[0].name.should         == "DNS Admin"
      @parser.registrant_contacts[0].organization.should == "Name.com LLC"
      @parser.registrant_contacts[0].address.should      == "2500 East Second Avenue\nSecond Floor"
      @parser.registrant_contacts[0].city.should         == "Denver"
      @parser.registrant_contacts[0].state.should        == "CO"
      @parser.registrant_contacts[0].zip.should          == "80206"
      @parser.registrant_contacts[0].country_code.should == "US"
      @parser.registrant_contacts[0].phone.should        == "+1.7202492374"
      @parser.registrant_contacts[0].fax.should          == nil
      @parser.registrant_contacts[0].email.should        == "dns@name.com"
    end
  end
  describe "#admin_contacts" do
    it do
      @parser.admin_contacts.should be_a(Array)
      @parser.admin_contacts.should have(1).items
      @parser.admin_contacts[0].should be_a(Whois::Record::Contact)
      @parser.admin_contacts[0].type.should         == Whois::Record::Contact::TYPE_ADMIN
      @parser.admin_contacts[0].id.should           == nil
      @parser.admin_contacts[0].name.should         == "DNS Admin"
      @parser.admin_contacts[0].organization.should == "Name.com LLC"
      @parser.admin_contacts[0].address.should      == "2500 East Second Avenue\nSecond Floor"
      @parser.admin_contacts[0].city.should         == "Denver"
      @parser.admin_contacts[0].state.should        == "CO"
      @parser.admin_contacts[0].zip.should          == "80206"
      @parser.admin_contacts[0].country_code.should == "US"
      @parser.admin_contacts[0].phone.should        == "+1.7202492374"
      @parser.admin_contacts[0].fax.should          == nil
      @parser.admin_contacts[0].email.should        == "dns@name.com"
    end
  end
  describe "#technical_contacts" do
    it do
      @parser.technical_contacts.should be_a(Array)
      @parser.technical_contacts.should have(1).items
      @parser.technical_contacts[0].should be_a(Whois::Record::Contact)
      @parser.technical_contacts[0].type.should         == Whois::Record::Contact::TYPE_TECHNICAL
      @parser.technical_contacts[0].id.should           == nil
      @parser.technical_contacts[0].name.should         == "DNS Admin"
      @parser.technical_contacts[0].organization.should == "Name.com LLC"
      @parser.technical_contacts[0].address.should      == "2500 East Second Avenue\nSecond Floor"
      @parser.technical_contacts[0].city.should         == "Denver"
      @parser.technical_contacts[0].state.should        == "CO"
      @parser.technical_contacts[0].zip.should          == "80206"
      @parser.technical_contacts[0].country_code.should == "US"
      @parser.technical_contacts[0].phone.should        == "+1.7202492374"
      @parser.technical_contacts[0].fax.should          == nil
      @parser.technical_contacts[0].email.should        == "dns@name.com"
    end
  end
  describe "#nameservers" do
    it do
      @parser.nameservers.should be_a(Array)
      @parser.nameservers.should have(4).items
      @parser.nameservers[0].should be_a(Whois::Record::Nameserver)
      @parser.nameservers[0].name.should == "ns1.name.com"
      @parser.nameservers[0].ipv4.should == nil
      @parser.nameservers[1].should be_a(Whois::Record::Nameserver)
      @parser.nameservers[1].name.should == "ns3.name.com"
      @parser.nameservers[1].ipv4.should == nil
      @parser.nameservers[2].should be_a(Whois::Record::Nameserver)
      @parser.nameservers[2].name.should == "dns01.name.com"
      @parser.nameservers[2].ipv4.should == nil
      @parser.nameservers[3].should be_a(Whois::Record::Nameserver)
      @parser.nameservers[3].name.should == "dns02.name.com"
      @parser.nameservers[3].ipv4.should == nil
    end
  end
end
